#!/usr/bin/env ruby

def empty_arguments	#Muestra mensaje de error
	print("Comando ejecutado sin argumentos, para más ayuda ejecuta 'systemctl --help'\n")
end

def show_help		#Muestra la ayuda

print("Usage:
        systemctml [OPTIONS] [FILENAME]
Options:
        --help, mostrar esta ayuda.
        --version, mostrar información sobre el autor del script
                   y fecha de creacion.
        --status FILENAME, comprueba si puede instalar/desintalar.
        --run FILENAME, instala/desinstala el software indicado.

Description:
        Este script se encarga de instalar/desinstalar
        el software indicado en el fichero FILENAME.
        Ejemplo de FILENAME:
        tree:install
        nmap:install
        atomix:remove\n")
end

def show_info		#Muestra la información del script
	print("Programa realizado por Aitor Rodríguez Rodríguez el 14/1/20\n")
end

def get_file	#Lee el archivo que se adjunta
  filename = ARGV[1]
	file_splited = File.read(filename).split(/\W+/)
	return file_splited
end

def get_programs	#Obtiene el nombre de los programas
	file_splited = get_file
	programs = []
	x = 0
	while x < file_splited.length
		programs.push(file_splited[x])
		x += 2
	end
	print programs
	return programs
end

def get_action		#Obtiene la acción a realizar con los programas (Instalar o borrar)
file_splited = get_file
	action = []
	x = 1
	while x < file_splited.length
		action.push(file_splited[x])
		x += 2
	end
	print action
	return action
end

def get_status 		#Indica si los programas están instalados o no
	programs = get_programs
	installed = {}
	programs.each do |a|
		exit = `whereis #{a} |grep bin |wc -l`.to_i
  	if exit == 1		
  	  installed[a] = "installed"
  	else
  	  installed[a] = "uninstalled"
  	end
	end		
	print installed
end

def do_installation 	#Hace la instalación o desinstalación de los programas
	user_id = `id -u`.to_i
	if user_id == 0
		programs = get_programs
		action = get_action
		x = 0
		while x < programs.length
			if action[x] == "install"
				`apt install -y #{programs[x]}`
			elsif action[x]== "remove"
				`apt remove -y #{programs[x]}`
			else
				print("Una de las acciones no tiene el formato correcto")
			end
		x += 1
		end
	else
		print ("Es necesario ser root para ejecutar el argumento --run\n")
	end
end 

def show_menu
  option = ARGV[0] 
	if option == nil
		empty_arguments  
	elsif option == "--help"
    show_help
  elsif option == "--version"
    show_info
  elsif option == "--status"
    get_status
  elsif option == "--run"
    do_installation
  else
    print ("Uso inadecuado del comando\n")
  end
end

show_menu
